name: Create EKS Cluster with Kind and CAPI

on: push

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
      - name: Kubectl describe nodes
        run: kubectl describe nodes
      - name: Download CAPI for AMD64
        run: curl -L https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.3.2/clusterctl-linux-amd64 -o clusterctl
      - name: Install clusterctl
        run: sudo install -o root -g root -m 0755 clusterctl /usr/local/bin/clusterctl
      - name: clustectl version
        run: clusterctl version
      - name: Initialization for AWS provider
        run: curl -L https://github.com/kubernetes-sigs/cluster-api-provider-aws/releases/download/v2.0.2/clusterawsadm-linux-amd64 -o clusterawsadm
      - name: Make it executable
        run: chmod +x clusterawsadm
      - name: Move the binary to a directory present in your PATH
        run: sudo mv clusterawsadm /usr/local/bin
      - name: Check version to confirm installation
        run: clusterawsadm version
      - name: Initialize the management cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: |
          clusterawsadm bootstrap iam create-cloudformation-stack
          export AWS_B64ENCODED_CREDENTIALS=$(clusterawsadm bootstrap credentials encode-as-profile)
          clusterctl init --infrastructure aws
      - name: kubectl wait deployment -n capa-system capa-controller-manager
        run: kubectl wait deployment -n capa-system capa-controller-manager --for condition=Available=True --timeout=90s
      - name: kubectl wait deployment -n capi-kubeadm-bootstrap-system capi-kubeadm-bootstrap-controller-manager
        run: kubectl wait deployment -n capi-kubeadm-bootstrap-system capi-kubeadm-bootstrap-controller-manager --for condition=Available=True --timeout=90s
      - name: kubectl wait deployment -n capi-kubeadm-control-plane-system capi-kubeadm-control-plane-controller-manager
        run: kubectl wait deployment -n capi-kubeadm-control-plane-system capi-kubeadm-control-plane-controller-manager --for condition=Available=True --timeout=90s
      - name: kubectl wait deployment -n capi-system capi-controller-manager
        run: kubectl wait deployment -n capi-system capi-controller-manager --for condition=Available=True --timeout=90s
      - name: Generating the cluster configuration
        env:
          AWS_CONTROL_PLANE_MACHINE_TYPE: ${{ vars.AWS_CONTROL_PLANE_MACHINE_TYPE }}
          AWS_NODE_MACHINE_TYPE: ${{ vars.AWS_NODE_MACHINE_TYPE }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_SSH_KEY_NAME: ${{ secrets.AWS_SSH_KEY_NAME }}
        run: |
          clusterctl generate cluster capi-quickstart \
          --kubernetes-version v1.26.0 \
          --control-plane-machine-count=3 \
          --worker-machine-count=3 \
          > capi-quickstart.yaml
      - name: Creating workload cluster
        run: kubectl apply -f capi-quickstart.yaml
      - name: Describe workload cluster
        run: clusterctl describe cluster capi-quickstart
      - name: Wait for 2 minutes
        run: sleep 120
      - name: Describe workload cluster
        run: clusterctl describe cluster capi-quickstart
      - name: Wait for 2 minutes
        run: sleep 120
      - name: Describe workload cluster
        run: clusterctl describe cluster capi-quickstart
      - name: Wait for 2 minutes
        run: sleep 120

      # - name: Wait for workload cluster to be provisioned
      #   run: kubectl wait cluster capi-quickstart --for condition=Ready=True --timeout=600s
