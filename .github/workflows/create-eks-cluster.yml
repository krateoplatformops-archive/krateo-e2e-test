name: Create EKS Cluster with Kind and CAPI

on: push

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
      - name: Kubectl describe nodes
        run: kubectl describe nodes
      - name: Download CAPI for AMD64
        run: curl -L https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.3.2/clusterctl-linux-amd64 -o clusterctl
      - name: Install clusterctl
        run: sudo install -o root -g root -m 0755 clusterctl /usr/local/bin/clusterctl
      - name: clustectl version
        run: clusterctl version
      - name: Initialization for AWS provider
        run: curl -L https://github.com/kubernetes-sigs/cluster-api-provider-aws/releases/download/v2.0.2/clusterawsadm-linux-amd64 -o clusterawsadm
      - name: Make it executable
        run: chmod +x clusterawsadm
      - name: Move the binary to a directory present in your PATH
        run: sudo mv clusterawsadm /usr/local/bin
      - name: Check version to confirm installation
        run: clusterawsadm version
      - name: Create a CloudFormation stack in AWS account
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: clusterawsadm bootstrap iam create-cloudformation-stack
      - name: Create the base64 encoded credentials using clusterawsadm
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: export AWS_B64ENCODED_CREDENTIALS=$(clusterawsadm bootstrap credentials encode-as-profile)
      - name: Finally, initialize the management cluster
        run: clusterctl init --infrastructure aws
